#!/usr/bin/python

"""
make sure we have the thumb+large sizes of all /my/pic/digicam jpgs
ready for serving. Photo site can make its own if any are missing, but
that will be slower.

this should be run after new photos are imported, and maybe every
night to catch strays.

it would be faster to make the 75px images out of the 600px
images. photos.py should just remember and use its last one resize,
and then we can ask for 600 followed by 75.

"""

import subprocess, random, time
from photos import thumb

files = [f for f in subprocess.Popen(
    "/usr/bin/find /my/pic/phonecam /my/pic/digicam -name *.jpg -o -name *.JPG".split(),
    stdout=subprocess.PIPE).communicate()[0].splitlines()
         if '.xvpics' not in f]

# this is so i can run multiple instances of this process in parallel
random.shuffle(files)

reportStep = 100
lastReportStart = time.time()
for i, filename in enumerate(files):
    filename = filename.strip()

    for size in [75, 250, 600]:
        try:
            thumb("http://photo.bigasterisk.com/%s" % filename[len("/my/pic/"):],
                  maxSize=size, justCache=True)
        except IOError:
            pass
    if (i + 1) % reportStep == 0:
        perFile = (time.time() - lastReportStart) / reportStep
        lastReportStart = time.time()
        print "finished %s of %s, est %s min left" % (
            i, len(files),
            round((len(files) - i) * perFile / 60))
